import os
import psycopg2
import smtplib
from email.mime.text import MIMEText
from dotenv import load_dotenv
from datetime import datetime

load_dotenv()

conn = psycopg2.connect(
    dbname=os.getenv("DB_NAME"),
    user=os.getenv("DB_USER"),
    password=os.getenv("DB_PASSWORD"),
    host=os.getenv("DB_HOST"),
    port=os.getenv("DB_PORT")
)
cur = conn.cursor()

cur.execute("""
    SELECT next_fire_time
    FROM notification_jobs
    WHERE next_fire_time::date = CURRENT_DATE
    ORDER BY next_fire_time ASC;
""")
rows = cur.fetchall()
timestamps = [r[0] for r in rows]

issues = []
for i in range(1, len(timestamps)):
    gap = (timestamps[i] - timestamps[i - 1]).total_seconds() / 60
    if gap != 15:
        issues.append(f"Issue at {timestamps[i]} â†’ Gap: {round(gap, 2)} mins")

if issues:
    body = "Notification schedule gap found:\n\n" + "\n".join(issues)
    msg = MIMEText(body)
    msg['Subject'] = "Notification Schedule Gap Detected"
    msg['From'] = os.getenv("EMAIL_FROM")
    msg['To'] = os.getenv("EMAIL_TO")

    try:
        with smtplib.SMTP(os.getenv("EMAIL_HOST"), int(os.getenv("EMAIL_PORT"))) as smtp:
            smtp.send_message(msg)
        print(f"[{datetime.now()}] Email sent.")
    except Exception as e:
        print(f"[{datetime.now()}] Email send failed: {e}")
else:
    print(f"[{datetime.now()}] All fire times are spaced 15 minutes apart.")

cur.close()
conn.close()

